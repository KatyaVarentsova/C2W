import { useState, type FC } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import { Button, CardHeader, CardText, Form, Alert } from "react-bootstrap";
import style from "./DashboardPage.module.css";
import { LineChart } from "../../components/LineChart";
import { PieChart } from "../../components/PieChart";

interface ISentimentStatusState {
  year: number;
  month: string;
  monthNumber: number;
  negative: number;
  neutral: number;
  positive: number;
}

interface ISentimentTotal {
  negative: number;
  neutral: number;
  positive: number;
}

export const DashboardPage: FC = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const topic = location.state?.topic || "–¢–µ–º–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞";

  // üîπ –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const [sentimentStatusState] = useState<ISentimentStatusState[]>([
    { year: 2024, month: "–Ø–Ω–≤–∞—Ä—å", monthNumber: 1, negative: 34, neutral: 4, positive: 8 },
    { year: 2024, month: "–§–µ–≤—Ä–∞–ª—å", monthNumber: 2, negative: 33, neutral: 3, positive: 7 },
    { year: 2024, month: "–ú–∞—Ä—Ç", monthNumber: 3, negative: 49, neutral: 4, positive: 8 },
    { year: 2024, month: "–ê–ø—Ä–µ–ª—å", monthNumber: 4, negative: 52, neutral: 6, positive: 9 },
    { year: 2024, month: "–ú–∞–π", monthNumber: 5, negative: 72, neutral: 2, positive: 8 },
    { year: 2024, month: "–ò—é–Ω—å", monthNumber: 6, negative: 93, neutral: 4, positive: 7 },
    { year: 2024, month: "–ò—é–ª—å", monthNumber: 7, negative: 104, neutral: 1, positive: 5 },
    { year: 2024, month: "–ê–≤–≥—É—Å—Ç", monthNumber: 8, negative: 120, neutral: 1, positive: 8 },
    { year: 2024, month: "–°–µ–Ω—Ç—è–±—Ä—å", monthNumber: 9, negative: 131, neutral: 5, positive: 0 },
    { year: 2024, month: "–û–∫—Ç—è–±—Ä—å", monthNumber: 10, negative: 139, neutral: 3, positive: 3 },
    { year: 2024, month: "–ù–æ—è–±—Ä—å", monthNumber: 11, negative: 158, neutral: 4, positive: 7 },
    { year: 2024, month: "–î–µ–∫–∞–±—Ä—å", monthNumber: 12, negative: 111, neutral: 3, positive: 2 },
    { year: 2025, month: "–Ø–Ω–≤–∞—Ä—å", monthNumber: 1, negative: 63, neutral: 1, positive: 2 },
    { year: 2025, month: "–§–µ–≤—Ä–∞–ª—å", monthNumber: 2, negative: 58, neutral: 0, positive: 5 },
    { year: 2025, month: "–ú–∞—Ä—Ç", monthNumber: 3, negative: 47, neutral: 1, positive: 0 },
    { year: 2025, month: "–ê–ø—Ä–µ–ª—å", monthNumber: 4, negative: 24, neutral: 0, positive: 2 },
    { year: 2025, month: "–ú–∞–π", monthNumber: 5, negative: 22, neutral: 0, positive: 7 },
  ]);

  const [sentimentTotalState] = useState<ISentimentTotal>({
    negative: 1310,
    neutral: 42,
    positive: 88,
  });

  // üîπ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞
  const [filter, setFilter] = useState({ from: "", to: "" });
  const [filteredData, setFilteredData] = useState<ISentimentStatusState[]>(sentimentStatusState);
  const [error, setError] = useState<string | null>(null);

  // üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  function handleFilter(e: React.FormEvent) {
    e.preventDefault();

    if (!filter.from || !filter.to) {
      setError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–±–µ –¥–∞—Ç—ã.");
      return;
    }

    const fromDate = new Date(filter.from);
    const toDate = new Date(filter.to);

    if (fromDate > toDate) {
      setError("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–∑–∂–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è.");
      return;
    }

    const newData = sentimentStatusState.filter((item) => {
      const itemDate = new Date(item.year, item.monthNumber - 1);
      return itemDate >= fromDate && itemDate <= toDate;
    });

    if (newData.length === 0) {
      setError("–î–∞–Ω–Ω—ã–µ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
      setFilteredData([]);
    } else {
      setError(null);
      setFilteredData(newData);
    }
  }

  return (
    <div className={style.container}>
      <CardHeader as="h2" className={style.title}>
        {topic}
      </CardHeader>

      {/* ===== LineChart + —Ñ–∏–ª—å—Ç—Ä ===== */}
      <section className={style.section}>
        <div className={style.chartBox}>
          {error ? (
            <Alert variant="danger" className={style.alert}>
              {error}
            </Alert>
          ) : (
            <LineChart sentimentStatus={filteredData} />
          )}
        </div>

        <div className={style.infoBox}>
          <Form className={style.filterForm} onSubmit={handleFilter}>
            <Form.Group className={style.filterGroup}>
              <Form.Label>–°:</Form.Label>
              <Form.Control
                type="month"
                value={filter.from}
                onChange={(e) => setFilter({ ...filter, from: e.target.value })}
              />
            </Form.Group>

            <Form.Group className={style.filterGroup}>
              <Form.Label>–ü–æ:</Form.Label>
              <Form.Control
                type="month"
                value={filter.to}
                onChange={(e) => setFilter({ ...filter, to: e.target.value })}
              />
            </Form.Group>

            <Button type="submit" variant="outline-primary" className={style.filterButton}>
              –ü—Ä–∏–º–µ–Ω–∏—Ç—å
            </Button>
          </Form>

          <CardText>
            –≠—Ç–æ—Ç –≥—Ä–∞—Ñ–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–µ–π –æ—Ç–∑—ã–≤–æ–≤ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.
          </CardText>
        </div>
      </section>

      {/* ===== PieChart ===== */}
      <section className={style.section}>
        <div className={`${style.chartBox} ${style.chartBox__pieChart}`}>
          <PieChart sentimentTotal={sentimentTotalState} />
        </div>
        <div className={style.infoBox}>
          <CardText>
            –≠—Ç–∞ –∫—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–µ–π –ø–æ —Ç–µ–º–µ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è.
          </CardText>
        </div>
      </section>

      <Button className={style.backButton} onClick={() => navigate("/topics")}>
        –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
      </Button>
    </div>
  );
};
